{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sonic\\\\OneDrive\\\\Documents\\\\GitHub\\\\StudyTracker\\\\src\\\\StudyInterface\\\\StudyInterface.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Footer from \"../Footer/Footer\";\nimport \"../Home/Home.css\";\nimport \"./StudyInterface.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyTracker = () => {\n  _s();\n  const [showAchievements, setShowAchievements] = useState(false);\n  const toggleAchievements = () => setShowAchievements(prev => !prev);\n  const [expandedFolderId, setExpandedFolderId] = useState(null);\n  const [folders, setFolders] = useState([]);\n  const [selectedFolderId, setSelectedFolderId] = useState(null);\n  const [showAddMenu, setShowAddMenu] = useState(false);\n  const [showFolderForm, setShowFolderForm] = useState(false);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [newFolderColor, setNewFolderColor] = useState(\"#ffb3b3\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(null);\n  const [taskDeadline, setTaskDeadline] = useState(\"\");\n  const parseDate = dateStr => {\n    if (!dateStr) return null;\n    const d = new Date(dateStr);\n    return isNaN(d) ? null : new Date(d.toDateString()); // midnight of that day\n  };\n  const calculateProgress = (createdAt, deadline) => {\n    const start = new Date(createdAt); // keep full timestamp\n    const end = new Date(deadline);\n    const now = new Date();\n    if (now >= end) return 100;\n    if (now <= start) return 0;\n    const total = end - start; // total milliseconds\n    const elapsed = now - start; // elapsed milliseconds\n\n    return Math.round(elapsed / total * 100);\n  };\n  const getDaysLeft = deadline => {\n    const today = parseDate(new Date().toISOString());\n    const dueDate = parseDate(deadline);\n    if (!dueDate) return \"\";\n\n    // Calculate difference in days (inclusive of due date)\n    const diff = Math.ceil((dueDate - today) / (1000 * 60 * 60 * 24));\n    if (diff < 0) return \"Overdue\";\n    if (diff === 0) return \"Due today\";\n    if (diff === 1) return \"1 day left\";\n    return `${diff} days left`;\n  };\n  const addTask = () => {\n    if (!newTask.trim() || !selectedFolderId) return;\n    setFolders(folders.map(folder => {\n      if (folder.id === selectedFolderId) {\n        const updatedTasks = [...folder.tasks];\n        if (editIndex !== null) {\n          updatedTasks[editIndex] = {\n            ...updatedTasks[editIndex],\n            text: newTask\n          };\n        } else {\n          updatedTasks.push({\n            text: newTask,\n            completed: false,\n            createdAt: new Date().toISOString(),\n            deadline: taskDeadline\n          });\n        }\n        return {\n          ...folder,\n          tasks: updatedTasks\n        };\n      }\n      return folder;\n    }));\n    setNewTask(\"\");\n    setEditIndex(null);\n    setTaskDeadline(\"\");\n    setShowTaskForm(false);\n  };\n  const toggleComplete = (folderId, index) => {\n    setFolders(prev => prev.map(folder => folder.id === folderId ? {\n      ...folder,\n      tasks: folder.tasks.map((task, i) => i === index ? {\n        ...task,\n        completed: !task.completed\n      } : task)\n    } : folder));\n  };\n  const editTask = (folderId, index) => {\n    const folder = folders.find(f => f.id === folderId);\n    if (!folder) return;\n    setNewTask(folder.tasks[index].text);\n    setTaskDeadline(folder.tasks[index].deadline || \"\");\n    setEditIndex(index);\n    setSelectedFolderId(folderId);\n    setShowTaskForm(true);\n  };\n  const deleteTask = (folderId, index) => {\n    setFolders(prev => prev.map(folder => folder.id === folderId ? {\n      ...folder,\n      tasks: folder.tasks.filter((_, i) => i !== index)\n    } : folder));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [\"To-Do List\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-toggle\",\n            onClick: () => setShowAddMenu(!showAddMenu),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), showAddMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowFolderForm(true);\n                setShowTaskForm(false);\n                setShowAddMenu(false);\n              },\n              children: \"\\uD83D\\uDCC1 Add Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowTaskForm(true);\n                setShowFolderForm(false);\n                setShowAddMenu(false);\n              },\n              children: \"\\u2795 Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), showTaskForm && selectedFolderId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a task...\",\n            value: newTask,\n            onChange: e => setNewTask(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && addTask()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: taskDeadline,\n            onChange: e => setTaskDeadline(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTask,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), showFolderForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Folder name\",\n            value: newFolderName,\n            onChange: e => setNewFolderName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: newFolderColor,\n            onChange: e => setNewFolderColor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!newFolderName.trim()) return;\n              const newFolder = {\n                id: Date.now(),\n                name: newFolderName.trim(),\n                color: newFolderColor,\n                tasks: []\n              };\n              setFolders([...folders, newFolder]);\n              setNewFolderName(\"\");\n              setNewFolderColor(\"#ffb3b3\");\n              setShowFolderForm(false);\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"folder-list\",\n          children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-header\",\n              onClick: () => {\n                setExpandedFolderId(prev => prev === folder.id ? null : folder.id);\n                setSelectedFolderId(folder.id);\n              },\n              style: {\n                backgroundColor: folder.id === expandedFolderId ? \"#e3f2fd\" : \"#f5f5f5\",\n                borderLeft: `10px solid ${folder.color}`\n              },\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), expandedFolderId === folder.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-list\",\n              children: folder.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: task.completed ? \"completed\" : \"\",\n                style: {\n                  borderLeft: `6px solid ${folder.color}`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: task.completed,\n                  onChange: () => toggleComplete(folder.id, index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 49\n                }, this), task.deadline && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      style: {\n                        width: `${calculateProgress(task.createdAt, task.deadline)}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"due-date-label\",\n                    children: getDaysLeft(task.deadline)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => editTask(folder.id, index),\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteTask(folder.id, index),\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this)]\n          }, folder.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-bar\",\n          onClick: toggleAchievements,\n          children: \"Achievements + Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), showAchievements && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2B50 You completed 3 Pomodoros today!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDCC8 Your focus time increased by 12%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget calendar-widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget pomodoro-widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Pomodoro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(StudyTracker, \"Zg1K33GV48C6X50GN5p/hSmc5fo=\");\n_c = StudyTracker;\nexport default StudyTracker;\nvar _c;\n$RefreshReg$(_c, \"StudyTracker\");","map":{"version":3,"names":["useState","Navbar","Footer","jsxDEV","_jsxDEV","StudyTracker","_s","showAchievements","setShowAchievements","toggleAchievements","prev","expandedFolderId","setExpandedFolderId","folders","setFolders","selectedFolderId","setSelectedFolderId","showAddMenu","setShowAddMenu","showFolderForm","setShowFolderForm","showTaskForm","setShowTaskForm","newFolderColor","setNewFolderColor","newFolderName","setNewFolderName","newTask","setNewTask","editIndex","setEditIndex","taskDeadline","setTaskDeadline","parseDate","dateStr","d","Date","isNaN","toDateString","calculateProgress","createdAt","deadline","start","end","now","total","elapsed","Math","round","getDaysLeft","today","toISOString","dueDate","diff","ceil","addTask","trim","map","folder","id","updatedTasks","tasks","text","push","completed","toggleComplete","folderId","index","task","i","editTask","find","f","deleteTask","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","newFolder","name","color","style","backgroundColor","borderLeft","checked","width","_c","$RefreshReg$"],"sources":["C:/Users/Sonic/OneDrive/Documents/GitHub/StudyTracker/src/StudyInterface/StudyInterface.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport \"../Home/Home.css\";\r\nimport \"./StudyInterface.css\";\r\n\r\nconst StudyTracker = () => {\r\n    const [showAchievements, setShowAchievements] = useState(false);\r\n    const toggleAchievements = () => setShowAchievements(prev => !prev);\r\n\r\n    const [expandedFolderId, setExpandedFolderId] = useState(null);\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolderId, setSelectedFolderId] = useState(null);\r\n\r\n    const [showAddMenu, setShowAddMenu] = useState(false);\r\n    const [showFolderForm, setShowFolderForm] = useState(false);\r\n    const [showTaskForm, setShowTaskForm] = useState(false);\r\n\r\n    const [newFolderColor, setNewFolderColor] = useState(\"#ffb3b3\");\r\n    const [newFolderName, setNewFolderName] = useState(\"\");\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const [editIndex, setEditIndex] = useState(null);\r\n    const [taskDeadline, setTaskDeadline] = useState(\"\");\r\n\r\n    const parseDate = (dateStr) => {\r\n        if (!dateStr) return null;\r\n        const d = new Date(dateStr);\r\n        return isNaN(d) ? null : new Date(d.toDateString()); // midnight of that day\r\n    };\r\n\r\n    const calculateProgress = (createdAt, deadline) => {\r\n        const start = new Date(createdAt);  // keep full timestamp\r\n        const end = new Date(deadline);\r\n        const now = new Date();\r\n\r\n        if (now >= end) return 100;\r\n        if (now <= start) return 0;\r\n\r\n        const total = end - start;  // total milliseconds\r\n        const elapsed = now - start; // elapsed milliseconds\r\n\r\n        return Math.round((elapsed / total) * 100);\r\n    };\r\n\r\n\r\n    const getDaysLeft = (deadline) => {\r\n        const today = parseDate(new Date().toISOString());\r\n        const dueDate = parseDate(deadline);\r\n        if (!dueDate) return \"\";\r\n\r\n        // Calculate difference in days (inclusive of due date)\r\n        const diff = Math.ceil((dueDate - today) / (1000 * 60 * 60 * 24));\r\n\r\n        if (diff < 0) return \"Overdue\";\r\n        if (diff === 0) return \"Due today\";\r\n        if (diff === 1) return \"1 day left\";\r\n        return `${diff} days left`;\r\n    };\r\n\r\n\r\n    const addTask = () => {\r\n        if (!newTask.trim() || !selectedFolderId) return;\r\n\r\n        setFolders(folders.map(folder => {\r\n            if (folder.id === selectedFolderId) {\r\n                const updatedTasks = [...folder.tasks];\r\n\r\n                if (editIndex !== null) {\r\n                    updatedTasks[editIndex] = {\r\n                        ...updatedTasks[editIndex],\r\n                        text: newTask,\r\n                    };\r\n                } else {\r\n                    updatedTasks.push({\r\n                        text: newTask,\r\n                        completed: false,\r\n                        createdAt: new Date().toISOString(),\r\n                        deadline: taskDeadline\r\n                    });\r\n                }\r\n\r\n                return { ...folder, tasks: updatedTasks };\r\n            }\r\n            return folder;\r\n        }));\r\n\r\n        setNewTask(\"\");\r\n        setEditIndex(null);\r\n        setTaskDeadline(\"\");\r\n        setShowTaskForm(false);\r\n    };\r\n\r\n    const toggleComplete = (folderId, index) => {\r\n        setFolders(prev =>\r\n            prev.map(folder =>\r\n                folder.id === folderId\r\n                    ? {\r\n                        ...folder,\r\n                        tasks: folder.tasks.map((task, i) =>\r\n                            i === index ? { ...task, completed: !task.completed } : task\r\n                        ),\r\n                    }\r\n                    : folder\r\n            )\r\n        );\r\n    };\r\n\r\n    const editTask = (folderId, index) => {\r\n        const folder = folders.find(f => f.id === folderId);\r\n        if (!folder) return;\r\n        setNewTask(folder.tasks[index].text);\r\n        setTaskDeadline(folder.tasks[index].deadline || \"\");\r\n        setEditIndex(index);\r\n        setSelectedFolderId(folderId);\r\n        setShowTaskForm(true);\r\n    };\r\n\r\n    const deleteTask = (folderId, index) => {\r\n        setFolders(prev =>\r\n            prev.map(folder =>\r\n                folder.id === folderId\r\n                    ? {\r\n                        ...folder,\r\n                        tasks: folder.tasks.filter((_, i) => i !== index),\r\n                    }\r\n                    : folder\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"tracker-page-container\">\r\n            <Navbar />\r\n\r\n            <div className=\"dashboard\">\r\n                <div className=\"sidebar\">\r\n                    <div className=\"header\">\r\n                        To-Do List\r\n                        <button className=\"add-toggle\" onClick={() => setShowAddMenu(!showAddMenu)}>+</button>\r\n                        {showAddMenu && (\r\n                            <div className=\"add-dropdown\">\r\n                                <div onClick={() => { setShowFolderForm(true); setShowTaskForm(false); setShowAddMenu(false); }}>\r\n                                    📁 Add Folder\r\n                                </div>\r\n                                <div onClick={() => { setShowTaskForm(true); setShowFolderForm(false); setShowAddMenu(false); }}>\r\n                                    ➕ Add Task\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {showTaskForm && selectedFolderId && (\r\n                        <div className=\"todo-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add a task...\"\r\n                                value={newTask}\r\n                                onChange={(e) => setNewTask(e.target.value)}\r\n                                onKeyDown={(e) => e.key === \"Enter\" && addTask()}\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                value={taskDeadline}\r\n                                onChange={(e) => setTaskDeadline(e.target.value)}\r\n                            />\r\n                            <button onClick={addTask}>Add</button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {showFolderForm && (\r\n                        <div className=\"folder-form\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Folder name\"\r\n                                value={newFolderName}\r\n                                onChange={(e) => setNewFolderName(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"color\"\r\n                                value={newFolderColor}\r\n                                onChange={(e) => setNewFolderColor(e.target.value)}\r\n                            />\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (!newFolderName.trim()) return;\r\n                                    const newFolder = {\r\n                                        id: Date.now(),\r\n                                        name: newFolderName.trim(),\r\n                                        color: newFolderColor,\r\n                                        tasks: []\r\n                                    };\r\n                                    setFolders([...folders, newFolder]);\r\n                                    setNewFolderName(\"\");\r\n                                    setNewFolderColor(\"#ffb3b3\");\r\n                                    setShowFolderForm(false);\r\n                                }}\r\n                            >\r\n                                Create\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <ul className=\"folder-list\">\r\n                        {folders.map(folder => (\r\n                            <li key={folder.id} className=\"folder-item\">\r\n                                <div\r\n                                    className=\"folder-header\"\r\n                                    onClick={() => {\r\n                                        setExpandedFolderId(prev => prev === folder.id ? null : folder.id);\r\n                                        setSelectedFolderId(folder.id);\r\n                                    }}\r\n                                    style={{\r\n                                        backgroundColor: folder.id === expandedFolderId ? \"#e3f2fd\" : \"#f5f5f5\",\r\n                                        borderLeft: `10px solid ${folder.color}`,\r\n                                    }}\r\n                                >\r\n                                    {folder.name}\r\n                                </div>\r\n\r\n                                {expandedFolderId === folder.id && (\r\n                                    <ul className=\"todo-list\">\r\n                                        {folder.tasks.map((task, index) => (\r\n                                            <li\r\n                                                key={index}\r\n                                                className={task.completed ? \"completed\" : \"\"}\r\n                                                style={{ borderLeft: `6px solid ${folder.color}` }}\r\n                                            >\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={task.completed}\r\n                                                    onChange={() => toggleComplete(folder.id, index)}\r\n                                                />\r\n                                                <span>{task.text}</span>\r\n                                                {task.deadline && (\r\n                                                    <div className=\"progress-wrapper\">\r\n                                                        <div className=\"progress-container\">\r\n                                                            <div\r\n                                                                className=\"progress-bar\"\r\n                                                                style={{ width: `${calculateProgress(task.createdAt, task.deadline)}%` }}\r\n                                                            ></div>\r\n                                                        </div>\r\n                                                        <span className=\"due-date-label\">{getDaysLeft(task.deadline)}</span>\r\n\r\n                                                    </div>\r\n\r\n                                                )}\r\n                                                <div className=\"task-buttons\">\r\n                                                    <button onClick={() => editTask(folder.id, index)}>✏️</button>\r\n                                                    <button onClick={() => deleteTask(folder.id, index)}>❌</button>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"middle-column\">\r\n                    <div className=\"image-container\"></div>\r\n                    <div className=\"achievements-bar\" onClick={toggleAchievements}>\r\n                        Achievements + Statistics\r\n                    </div>\r\n                    {showAchievements && (\r\n                        <div className=\"achievements-content\">\r\n                            <p>⭐ You completed 3 Pomodoros today!</p>\r\n                            <p>📈 Your focus time increased by 12%</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"widgets\">\r\n                    <div className=\"widget calendar-widget\">\r\n                        <div className=\"header\">Calendar</div>\r\n                    </div>\r\n                    <div className=\"widget pomodoro-widget\">\r\n                        <div className=\"header\">Pomodoro</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main\"></div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudyTracker;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}