{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sonic\\\\OneDrive\\\\Documents\\\\GitHub\\\\StudyTracker\\\\src\\\\StudyInterface\\\\StudyInterface.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Footer from \"../Footer/Footer\";\nimport \"../Home/Home.css\";\nimport \"./StudyInterface.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyTracker = () => {\n  _s();\n  const [showAchievements, setShowAchievements] = useState(false);\n  const toggleAchievements = () => setShowAchievements(prev => !prev);\n  const [expandedFolderId, setExpandedFolderId] = useState(null);\n  const [folders, setFolders] = useState([]);\n  const [selectedFolderId, setSelectedFolderId] = useState(null);\n  const [showAddMenu, setShowAddMenu] = useState(false);\n  const [showFolderForm, setShowFolderForm] = useState(false);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [newFolderColor, setNewFolderColor] = useState(\"#ffb3b3\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(null);\n  const [taskDeadline, setTaskDeadline] = useState(\"\");\n  const [taskStartDate, setTaskStartDate] = useState(\"\");\n  const parseDate = dateStr => {\n    if (!dateStr) return null;\n    const d = new Date(dateStr);\n    return isNaN(d) ? null : new Date(d.toDateString());\n  };\n  const calculateProgress = (startDateStr, deadlineStr) => {\n    if (!startDateStr || !deadlineStr) return 0;\n    const [sy, sm, sd] = startDateStr.split(\"-\").map(Number);\n    const [dy, dm, dd] = deadlineStr.split(\"-\").map(Number);\n    const start = new Date(sy, sm - 1, sd);\n    const deadline = new Date(dy, dm - 1, dd);\n    const now = new Date();\n\n    // If overdue\n    if (now >= deadline) return 100;\n    // If before start\n    if (now < start) return 0;\n    const isSameDay = start.toDateString() === deadline.toDateString();\n    if (isSameDay) {\n      const totalHours = 24;\n      const elapsedHours = (now.getTime() - start.getTime()) / (1000 * 60 * 60);\n      return Math.min(100, Math.round(elapsedHours / totalHours * 100));\n    }\n    const startMidnight = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n    const deadlineMidnight = new Date(deadline.getFullYear(), deadline.getMonth(), deadline.getDate());\n    const nowMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const totalDays = (deadlineMidnight - startMidnight) / (1000 * 60 * 60 * 24);\n    const elapsedDays = (nowMidnight - startMidnight) / (1000 * 60 * 60 * 24);\n    return Math.min(100, Math.round(elapsedDays / totalDays * 100));\n  };\n  const getDaysLeft = deadline => {\n    if (!deadline) return \"\";\n    const [year, month, day] = deadline.split(\"-\").map(Number);\n    const dueDate = new Date(year, month - 1, day);\n    const today = new Date();\n    const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    const timeDiff = dueDate.getTime() - todayDate.getTime();\n    const dayDiff = Math.round(timeDiff / (1000 * 60 * 60 * 24));\n    if (dayDiff < 0) return \"Overdue\";\n    if (dayDiff === 0) return \"Due today\";\n    if (dayDiff === 1) return \"Due tomorrow\";\n    return `${dayDiff} days left`;\n  };\n  const addTask = () => {\n    if (!newTask.trim() || !selectedFolderId) return;\n    setFolders(folders.map(folder => {\n      if (folder.id === selectedFolderId) {\n        const updatedTasks = [...folder.tasks];\n        if (editIndex !== null) {\n          updatedTasks[editIndex] = {\n            ...updatedTasks[editIndex],\n            text: newTask,\n            deadline: taskDeadline,\n            startDate: taskStartDate || updatedTasks[editIndex].startDate\n          };\n        } else {\n          updatedTasks.push({\n            text: newTask,\n            completed: false,\n            startDate: taskStartDate || new Date().toISOString(),\n            deadline: taskDeadline\n          });\n        }\n        return {\n          ...folder,\n          tasks: updatedTasks\n        };\n      }\n      return folder;\n    }));\n    setNewTask(\"\");\n    setEditIndex(null);\n    setTaskDeadline(\"\");\n    setTaskStartDate(\"\");\n    setShowTaskForm(false);\n  };\n  const toggleComplete = (folderId, index) => {\n    setFolders(prev => prev.map(folder => folder.id === folderId ? {\n      ...folder,\n      tasks: folder.tasks.map((task, i) => i === index ? {\n        ...task,\n        completed: !task.completed\n      } : task)\n    } : folder));\n  };\n  const editTask = (folderId, index) => {\n    const folder = folders.find(f => f.id === folderId);\n    if (!folder) return;\n    setNewTask(folder.tasks[index].text);\n    setTaskDeadline(folder.tasks[index].deadline || \"\");\n    setTaskStartDate(folder.tasks[index].startDate || \"\");\n    setEditIndex(index);\n    setSelectedFolderId(folderId);\n    setShowTaskForm(true);\n  };\n  const deleteTask = (folderId, index) => {\n    setFolders(prev => prev.map(folder => folder.id === folderId ? {\n      ...folder,\n      tasks: folder.tasks.filter((_, i) => i !== index)\n    } : folder));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [\"To-Do List\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-toggle\",\n            onClick: () => setShowAddMenu(!showAddMenu),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), showAddMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowFolderForm(true);\n                setShowTaskForm(false);\n                setShowAddMenu(false);\n              },\n              children: \"\\uD83D\\uDCC1 Add Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowTaskForm(true);\n                setShowFolderForm(false);\n                setShowAddMenu(false);\n              },\n              children: \"\\u2795 Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), showTaskForm && selectedFolderId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a task...\",\n            value: newTask,\n            onChange: e => setNewTask(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && addTask()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: taskStartDate,\n            onChange: e => setTaskStartDate(e.target.value),\n            placeholder: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: taskDeadline,\n            onChange: e => setTaskDeadline(e.target.value),\n            placeholder: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTask,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), showFolderForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Folder name\",\n            value: newFolderName,\n            onChange: e => setNewFolderName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: newFolderColor,\n            onChange: e => setNewFolderColor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!newFolderName.trim()) return;\n              const newFolder = {\n                id: Date.now(),\n                name: newFolderName.trim(),\n                color: newFolderColor,\n                tasks: []\n              };\n              setFolders([...folders, newFolder]);\n              setNewFolderName(\"\");\n              setNewFolderColor(\"#ffb3b3\");\n              setShowFolderForm(false);\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"folder-list\",\n          children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-header\",\n              onClick: () => {\n                setExpandedFolderId(prev => prev === folder.id ? null : folder.id);\n                setSelectedFolderId(folder.id);\n              },\n              style: {\n                backgroundColor: folder.id === expandedFolderId ? \"#e3f2fd\" : \"#f5f5f5\",\n                borderLeft: `10px solid ${folder.color}`\n              },\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), expandedFolderId === folder.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-list\",\n              children: folder.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: task.completed ? \"completed\" : \"\",\n                style: {\n                  borderLeft: `6px solid ${folder.color}`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: task.completed,\n                  onChange: () => toggleComplete(folder.id, index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 49\n                }, this), task.deadline && task.startDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      style: {\n                        width: `${calculateProgress(task.startDate, task.deadline)}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"due-date-label\",\n                    children: getDaysLeft(task.deadline)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => editTask(folder.id, index),\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteTask(folder.id, index),\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this)]\n          }, folder.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-bar\",\n          onClick: toggleAchievements,\n          children: \"Achievements + Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), showAchievements && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2B50 You completed 3 Pomodoros today!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDCC8 Your focus time increased by 12%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget calendar-widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget pomodoro-widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Pomodoro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(StudyTracker, \"g88ksnBhmzNBYtdeKrvE5FQ2gGE=\");\n_c = StudyTracker;\nexport default StudyTracker;\nvar _c;\n$RefreshReg$(_c, \"StudyTracker\");","map":{"version":3,"names":["useState","Navbar","Footer","jsxDEV","_jsxDEV","StudyTracker","_s","showAchievements","setShowAchievements","toggleAchievements","prev","expandedFolderId","setExpandedFolderId","folders","setFolders","selectedFolderId","setSelectedFolderId","showAddMenu","setShowAddMenu","showFolderForm","setShowFolderForm","showTaskForm","setShowTaskForm","newFolderColor","setNewFolderColor","newFolderName","setNewFolderName","newTask","setNewTask","editIndex","setEditIndex","taskDeadline","setTaskDeadline","taskStartDate","setTaskStartDate","parseDate","dateStr","d","Date","isNaN","toDateString","calculateProgress","startDateStr","deadlineStr","sy","sm","sd","split","map","Number","dy","dm","dd","start","deadline","now","isSameDay","totalHours","elapsedHours","getTime","Math","min","round","startMidnight","getFullYear","getMonth","getDate","deadlineMidnight","nowMidnight","totalDays","elapsedDays","getDaysLeft","year","month","day","dueDate","today","todayDate","timeDiff","dayDiff","addTask","trim","folder","id","updatedTasks","tasks","text","startDate","push","completed","toISOString","toggleComplete","folderId","index","task","i","editTask","find","f","deleteTask","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","newFolder","name","color","style","backgroundColor","borderLeft","checked","width","_c","$RefreshReg$"],"sources":["C:/Users/Sonic/OneDrive/Documents/GitHub/StudyTracker/src/StudyInterface/StudyInterface.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport \"../Home/Home.css\";\r\nimport \"./StudyInterface.css\";\r\n\r\nconst StudyTracker = () => {\r\n    const [showAchievements, setShowAchievements] = useState(false);\r\n    const toggleAchievements = () => setShowAchievements(prev => !prev);\r\n\r\n    const [expandedFolderId, setExpandedFolderId] = useState(null);\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolderId, setSelectedFolderId] = useState(null);\r\n\r\n    const [showAddMenu, setShowAddMenu] = useState(false);\r\n    const [showFolderForm, setShowFolderForm] = useState(false);\r\n    const [showTaskForm, setShowTaskForm] = useState(false);\r\n\r\n    const [newFolderColor, setNewFolderColor] = useState(\"#ffb3b3\");\r\n    const [newFolderName, setNewFolderName] = useState(\"\");\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const [editIndex, setEditIndex] = useState(null);\r\n    const [taskDeadline, setTaskDeadline] = useState(\"\");\r\n    const [taskStartDate, setTaskStartDate] = useState(\"\");\r\n\r\n    const parseDate = (dateStr) => {\r\n        if (!dateStr) return null;\r\n        const d = new Date(dateStr);\r\n        return isNaN(d) ? null : new Date(d.toDateString());\r\n    };\r\n\r\n    const calculateProgress = (startDateStr, deadlineStr) => {\r\n        if (!startDateStr || !deadlineStr) return 0;\r\n\r\n        const [sy, sm, sd] = startDateStr.split(\"-\").map(Number);\r\n        const [dy, dm, dd] = deadlineStr.split(\"-\").map(Number);\r\n\r\n        const start = new Date(sy, sm - 1, sd);\r\n        const deadline = new Date(dy, dm - 1, dd);\r\n        const now = new Date();\r\n\r\n        // If overdue\r\n        if (now >= deadline) return 100;\r\n        // If before start\r\n        if (now < start) return 0;\r\n\r\n        const isSameDay = start.toDateString() === deadline.toDateString();\r\n\r\n        if (isSameDay) {\r\n            const totalHours = 24;\r\n            const elapsedHours = (now.getTime() - start.getTime()) / (1000 * 60 * 60);\r\n            return Math.min(100, Math.round((elapsedHours / totalHours) * 100));\r\n        }\r\n\r\n        const startMidnight = new Date(start.getFullYear(), start.getMonth(), start.getDate());\r\n        const deadlineMidnight = new Date(deadline.getFullYear(), deadline.getMonth(), deadline.getDate());\r\n        const nowMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n\r\n        const totalDays = (deadlineMidnight - startMidnight) / (1000 * 60 * 60 * 24);\r\n        const elapsedDays = (nowMidnight - startMidnight) / (1000 * 60 * 60 * 24);\r\n\r\n        return Math.min(100, Math.round((elapsedDays / totalDays) * 100));\r\n    };\r\n\r\n    const getDaysLeft = (deadline) => {\r\n        if (!deadline) return \"\";\r\n\r\n        const [year, month, day] = deadline.split(\"-\").map(Number);\r\n        const dueDate = new Date(year, month - 1, day);\r\n        const today = new Date();\r\n        const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n        const timeDiff = dueDate.getTime() - todayDate.getTime();\r\n        const dayDiff = Math.round(timeDiff / (1000 * 60 * 60 * 24));\r\n\r\n        if (dayDiff < 0) return \"Overdue\";\r\n        if (dayDiff === 0) return \"Due today\";\r\n        if (dayDiff === 1) return \"Due tomorrow\";\r\n        return `${dayDiff} days left`;\r\n    };\r\n\r\n\r\n    const addTask = () => {\r\n        if (!newTask.trim() || !selectedFolderId) return;\r\n\r\n        setFolders(folders.map(folder => {\r\n            if (folder.id === selectedFolderId) {\r\n                const updatedTasks = [...folder.tasks];\r\n\r\n                if (editIndex !== null) {\r\n                    updatedTasks[editIndex] = {\r\n                        ...updatedTasks[editIndex],\r\n                        text: newTask,\r\n                        deadline: taskDeadline,\r\n                        startDate: taskStartDate || updatedTasks[editIndex].startDate\r\n                    };\r\n                } else {\r\n                    updatedTasks.push({\r\n                        text: newTask,\r\n                        completed: false,\r\n                        startDate: taskStartDate || new Date().toISOString(),\r\n                        deadline: taskDeadline\r\n                    });\r\n                }\r\n\r\n                return { ...folder, tasks: updatedTasks };\r\n            }\r\n            return folder;\r\n        }));\r\n\r\n        setNewTask(\"\");\r\n        setEditIndex(null);\r\n        setTaskDeadline(\"\");\r\n        setTaskStartDate(\"\");\r\n        setShowTaskForm(false);\r\n    };\r\n\r\n    const toggleComplete = (folderId, index) => {\r\n        setFolders(prev =>\r\n            prev.map(folder =>\r\n                folder.id === folderId\r\n                    ? {\r\n                        ...folder,\r\n                        tasks: folder.tasks.map((task, i) =>\r\n                            i === index ? { ...task, completed: !task.completed } : task\r\n                        ),\r\n                    }\r\n                    : folder\r\n            )\r\n        );\r\n    };\r\n\r\n    const editTask = (folderId, index) => {\r\n        const folder = folders.find(f => f.id === folderId);\r\n        if (!folder) return;\r\n        setNewTask(folder.tasks[index].text);\r\n        setTaskDeadline(folder.tasks[index].deadline || \"\");\r\n        setTaskStartDate(folder.tasks[index].startDate || \"\");\r\n        setEditIndex(index);\r\n        setSelectedFolderId(folderId);\r\n        setShowTaskForm(true);\r\n    };\r\n\r\n    const deleteTask = (folderId, index) => {\r\n        setFolders(prev =>\r\n            prev.map(folder =>\r\n                folder.id === folderId\r\n                    ? {\r\n                        ...folder,\r\n                        tasks: folder.tasks.filter((_, i) => i !== index),\r\n                    }\r\n                    : folder\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"tracker-page-container\">\r\n            <Navbar />\r\n\r\n            <div className=\"dashboard\">\r\n                <div className=\"sidebar\">\r\n                    <div className=\"header\">\r\n                        To-Do List\r\n                        <button className=\"add-toggle\" onClick={() => setShowAddMenu(!showAddMenu)}>+</button>\r\n                        {showAddMenu && (\r\n                            <div className=\"add-dropdown\">\r\n                                <div onClick={() => { setShowFolderForm(true); setShowTaskForm(false); setShowAddMenu(false); }}>\r\n                                    📁 Add Folder\r\n                                </div>\r\n                                <div onClick={() => { setShowTaskForm(true); setShowFolderForm(false); setShowAddMenu(false); }}>\r\n                                    ➕ Add Task\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {showTaskForm && selectedFolderId && (\r\n                        <div className=\"todo-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add a task...\"\r\n                                value={newTask}\r\n                                onChange={(e) => setNewTask(e.target.value)}\r\n                                onKeyDown={(e) => e.key === \"Enter\" && addTask()}\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                value={taskStartDate}\r\n                                onChange={(e) => setTaskStartDate(e.target.value)}\r\n                                placeholder=\"Start date\"\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                value={taskDeadline}\r\n                                onChange={(e) => setTaskDeadline(e.target.value)}\r\n                                placeholder=\"Deadline\"\r\n                            />\r\n                            <button onClick={addTask}>Add</button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {showFolderForm && (\r\n                        <div className=\"folder-form\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Folder name\"\r\n                                value={newFolderName}\r\n                                onChange={(e) => setNewFolderName(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"color\"\r\n                                value={newFolderColor}\r\n                                onChange={(e) => setNewFolderColor(e.target.value)}\r\n                            />\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (!newFolderName.trim()) return;\r\n                                    const newFolder = {\r\n                                        id: Date.now(),\r\n                                        name: newFolderName.trim(),\r\n                                        color: newFolderColor,\r\n                                        tasks: []\r\n                                    };\r\n                                    setFolders([...folders, newFolder]);\r\n                                    setNewFolderName(\"\");\r\n                                    setNewFolderColor(\"#ffb3b3\");\r\n                                    setShowFolderForm(false);\r\n                                }}\r\n                            >\r\n                                Create\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <ul className=\"folder-list\">\r\n                        {folders.map(folder => (\r\n                            <li key={folder.id} className=\"folder-item\">\r\n                                <div\r\n                                    className=\"folder-header\"\r\n                                    onClick={() => {\r\n                                        setExpandedFolderId(prev => prev === folder.id ? null : folder.id);\r\n                                        setSelectedFolderId(folder.id);\r\n                                    }}\r\n                                    style={{\r\n                                        backgroundColor: folder.id === expandedFolderId ? \"#e3f2fd\" : \"#f5f5f5\",\r\n                                        borderLeft: `10px solid ${folder.color}`,\r\n                                    }}\r\n                                >\r\n                                    {folder.name}\r\n                                </div>\r\n\r\n                                {expandedFolderId === folder.id && (\r\n                                    <ul className=\"todo-list\">\r\n                                        {folder.tasks.map((task, index) => (\r\n                                            <li\r\n                                                key={index}\r\n                                                className={task.completed ? \"completed\" : \"\"}\r\n                                                style={{ borderLeft: `6px solid ${folder.color}` }}\r\n                                            >\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={task.completed}\r\n                                                    onChange={() => toggleComplete(folder.id, index)}\r\n                                                />\r\n                                                <span>{task.text}</span>\r\n                                                {task.deadline && task.startDate && (\r\n                                                    <div className=\"progress-wrapper\">\r\n                                                        <div className=\"progress-container\">\r\n                                                            <div\r\n                                                                className=\"progress-bar\"\r\n                                                                style={{ width: `${calculateProgress(task.startDate, task.deadline)}%` }}\r\n                                                            ></div>\r\n                                                        </div>\r\n                                                        <span className=\"due-date-label\">{getDaysLeft(task.deadline)}</span>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div className=\"task-buttons\">\r\n                                                    <button onClick={() => editTask(folder.id, index)}>✏️</button>\r\n                                                    <button onClick={() => deleteTask(folder.id, index)}>❌</button>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"middle-column\">\r\n                    <div className=\"image-container\"></div>\r\n                    <div className=\"achievements-bar\" onClick={toggleAchievements}>\r\n                        Achievements + Statistics\r\n                    </div>\r\n                    {showAchievements && (\r\n                        <div className=\"achievements-content\">\r\n                            <p>⭐ You completed 3 Pomodoros today!</p>\r\n                            <p>📈 Your focus time increased by 12%</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"widgets\">\r\n                    <div className=\"widget calendar-widget\">\r\n                        <div className=\"header\">Calendar</div>\r\n                    </div>\r\n                    <div className=\"widget pomodoro-widget\">\r\n                        <div className=\"header\">Pomodoro</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main\"></div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudyTracker;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}