{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sonic\\\\OneDrive\\\\Documents\\\\GitHub\\\\StudyTracker\\\\src\\\\StudyInterface\\\\StudyInterface.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Footer from \"../Footer/Footer\";\nimport \"../Home/Home.css\";\nimport \"./StudyInterface.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyTracker = () => {\n  _s();\n  const [showAchievements, setShowAchievements] = useState(false);\n  const toggleAchievements = () => setShowAchievements(prev => !prev);\n  const [expandedFolderId, setExpandedFolderId] = useState(null);\n  const [folders, setFolders] = useState([]);\n  const [selectedFolderId, setSelectedFolderId] = useState(null);\n  const [draggedTaskInfo, setDraggedTaskInfo] = useState(null);\n  const [showAddMenu, setShowAddMenu] = useState(false);\n  const [showFolderForm, setShowFolderForm] = useState(false);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [newFolderColor, setNewFolderColor] = useState(\"#ffb3b3\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(null);\n  const [taskDeadline, setTaskDeadline] = useState(\"\");\n  const [taskStartDate, setTaskStartDate] = useState(\"\");\n  const calculateProgress = (startDate, deadline) => {\n    const start = new Date(startDate);\n    const end = new Date(deadline);\n    const now = new Date();\n    if (now >= end) return 100;\n    if (now <= start) return 0;\n    const totalMs = end - start;\n    const elapsedMs = now - start;\n    return Math.min(100, Math.round(elapsedMs / totalMs * 100));\n  };\n  const getDaysLeft = deadline => {\n    if (!deadline) return \"\";\n    const [year, month, day] = deadline.split(\"-\").map(Number);\n    const dueDate = new Date(year, month - 1, day);\n    const today = new Date();\n    const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    const timeDiff = dueDate.getTime() - todayDate.getTime();\n    const dayDiff = Math.round(timeDiff / (1000 * 60 * 60 * 24));\n    if (dayDiff < 0) return \"Overdue\";\n    if (dayDiff === 0) return \"Due today\";\n    if (dayDiff === 1) return \"Due tomorrow\";\n    return `${dayDiff} days left`;\n  };\n  const addTask = () => {\n    if (!newTask.trim() || !selectedFolderId) return;\n    setFolders(folders.map(folder => {\n      if (folder.id === selectedFolderId) {\n        const updatedTasks = [...folder.tasks];\n        if (editIndex !== null) {\n          updatedTasks[editIndex] = {\n            ...updatedTasks[editIndex],\n            text: newTask,\n            deadline: taskDeadline,\n            startDate: taskStartDate || updatedTasks[editIndex].startDate\n          };\n        } else {\n          updatedTasks.push({\n            text: newTask,\n            completed: false,\n            startDate: taskStartDate || new Date().toISOString(),\n            deadline: taskDeadline\n          });\n        }\n        return {\n          ...folder,\n          tasks: updatedTasks\n        };\n      }\n      return folder;\n    }));\n    setNewTask(\"\");\n    setEditIndex(null);\n    setTaskDeadline(\"\");\n    setTaskStartDate(\"\");\n    setShowTaskForm(false);\n  };\n  const toggleComplete = (folderId, index) => {\n    setFolders(prev => prev.map(folder => folder.id === folderId ? {\n      ...folder,\n      tasks: folder.tasks.map((task, i) => i === index ? {\n        ...task,\n        completed: !task.completed\n      } : task)\n    } : folder));\n  };\n  const editTask = (folderId, index) => {\n    const folder = folders.find(f => f.id === folderId);\n    if (!folder) return;\n    setNewTask(folder.tasks[index].text);\n    setTaskDeadline(folder.tasks[index].deadline || \"\");\n    setTaskStartDate(folder.tasks[index].startDate || \"\");\n    setEditIndex(index);\n    setSelectedFolderId(folderId);\n    setShowTaskForm(true);\n  };\n  const deleteTask = (folderId, index) => {\n    setFolders(prev => prev.map(folder => folder.id === folderId ? {\n      ...folder,\n      tasks: folder.tasks.filter((_, i) => i !== index)\n    } : folder));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [\"To-Do List\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-toggle\",\n            onClick: () => setShowAddMenu(!showAddMenu),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), showAddMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowFolderForm(true);\n                setShowTaskForm(false);\n                setShowAddMenu(false);\n              },\n              children: \"\\uD83D\\uDCC1 Add Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowTaskForm(true);\n                setShowFolderForm(false);\n                setShowAddMenu(false);\n              },\n              children: \"\\u2795 Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), showTaskForm && selectedFolderId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a task...\",\n            value: newTask,\n            onChange: e => setNewTask(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && addTask()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: taskStartDate,\n            onChange: e => setTaskStartDate(e.target.value),\n            placeholder: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: taskDeadline,\n            onChange: e => setTaskDeadline(e.target.value),\n            placeholder: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTask,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), showFolderForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Folder name\",\n            value: newFolderName,\n            onChange: e => setNewFolderName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: newFolderColor,\n            onChange: e => setNewFolderColor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!newFolderName.trim()) return;\n              const newFolder = {\n                id: Date.now(),\n                name: newFolderName.trim(),\n                color: newFolderColor,\n                tasks: []\n              };\n              setFolders([...folders, newFolder]);\n              setNewFolderName(\"\");\n              setNewFolderColor(\"#ffb3b3\");\n              setShowFolderForm(false);\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"folder-list\",\n          children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-header\",\n              onClick: () => {\n                setExpandedFolderId(prev => prev === folder.id ? null : folder.id);\n                setSelectedFolderId(folder.id);\n              },\n              style: {\n                backgroundColor: folder.id === expandedFolderId ? \"#e3f2fd\" : \"#f5f5f5\",\n                borderLeft: `10px solid ${folder.color}`\n              },\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), expandedFolderId === folder.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-list\",\n              children: folder.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: task.completed ? \"completed\" : \"\",\n                style: {\n                  borderLeft: `6px solid ${folder.color}`\n                },\n                draggable: true,\n                onDragStart: () => setDraggedTaskInfo({\n                  folderId: folder.id,\n                  taskIndex: index\n                }),\n                onDrop: e => {\n                  e.preventDefault();\n                  if (!draggedTaskInfo) return;\n                  setFolders(prev => {\n                    const newFolders = [...prev];\n                    const sourceFolder = newFolders.find(f => f.id === draggedTaskInfo.folderId);\n                    const targetFolder = newFolders.find(f => f.id === folder.id);\n                    if (!sourceFolder || !targetFolder) return prev;\n                    const [movedTask] = sourceFolder.tasks.splice(draggedTaskInfo.taskIndex, 1);\n\n                    // Get bounding box to determine where in the target the drop occurred\n                    const bounding = e.currentTarget.getBoundingClientRect();\n                    const offset = e.clientY - bounding.top;\n\n                    // If the drop is in the top half of the element, insert before\n                    const dropBefore = offset < bounding.height / 2;\n                    const newIndex = dropBefore ? index : index + 1;\n                    if (folder.id === draggedTaskInfo.folderId) {\n                      // Drag within same folder\n                      sourceFolder.tasks.splice(newIndex > draggedTaskInfo.taskIndex ? newIndex - 1 : newIndex, 0, movedTask);\n                    } else {\n                      // Drag to another folder\n                      targetFolder.tasks.splice(newIndex, 0, movedTask);\n                    }\n                    return newFolders;\n                  });\n                  setDraggedTaskInfo(null);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: task.completed,\n                  onChange: () => toggleComplete(folder.id, index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: task.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 49\n                }, this), task.deadline && task.startDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      style: {\n                        width: `${calculateProgress(task.startDate, task.deadline)}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"due-date-label\",\n                    children: getDaysLeft(task.deadline)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => editTask(folder.id, index),\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteTask(folder.id, index),\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this)]\n          }, folder.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-bar\",\n          onClick: toggleAchievements,\n          children: \"Achievements + Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), showAchievements && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2B50 You completed 3 Pomodoros today!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDCC8 Your focus time increased by 12%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget calendar-widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget pomodoro-widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Pomodoro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(StudyTracker, \"5xNDN5a9IbaGww79QgukZdDvSIU=\");\n_c = StudyTracker;\nexport default StudyTracker;\nvar _c;\n$RefreshReg$(_c, \"StudyTracker\");","map":{"version":3,"names":["useState","Navbar","Footer","jsxDEV","_jsxDEV","StudyTracker","_s","showAchievements","setShowAchievements","toggleAchievements","prev","expandedFolderId","setExpandedFolderId","folders","setFolders","selectedFolderId","setSelectedFolderId","draggedTaskInfo","setDraggedTaskInfo","showAddMenu","setShowAddMenu","showFolderForm","setShowFolderForm","showTaskForm","setShowTaskForm","newFolderColor","setNewFolderColor","newFolderName","setNewFolderName","newTask","setNewTask","editIndex","setEditIndex","taskDeadline","setTaskDeadline","taskStartDate","setTaskStartDate","calculateProgress","startDate","deadline","start","Date","end","now","totalMs","elapsedMs","Math","min","round","getDaysLeft","year","month","day","split","map","Number","dueDate","today","todayDate","getFullYear","getMonth","getDate","timeDiff","getTime","dayDiff","addTask","trim","folder","id","updatedTasks","tasks","text","push","completed","toISOString","toggleComplete","folderId","index","task","i","editTask","find","f","deleteTask","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","newFolder","name","color","style","backgroundColor","borderLeft","draggable","onDragStart","taskIndex","onDrop","preventDefault","newFolders","sourceFolder","targetFolder","movedTask","splice","bounding","currentTarget","getBoundingClientRect","offset","clientY","top","dropBefore","height","newIndex","checked","width","_c","$RefreshReg$"],"sources":["C:/Users/Sonic/OneDrive/Documents/GitHub/StudyTracker/src/StudyInterface/StudyInterface.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport \"../Home/Home.css\";\r\nimport \"./StudyInterface.css\";\r\n\r\nconst StudyTracker = () => {\r\n    const [showAchievements, setShowAchievements] = useState(false);\r\n    const toggleAchievements = () => setShowAchievements(prev => !prev);\r\n\r\n    const [expandedFolderId, setExpandedFolderId] = useState(null);\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolderId, setSelectedFolderId] = useState(null);\r\n\r\n    const [draggedTaskInfo, setDraggedTaskInfo] = useState(null);\r\n\r\n    const [showAddMenu, setShowAddMenu] = useState(false);\r\n    const [showFolderForm, setShowFolderForm] = useState(false);\r\n    const [showTaskForm, setShowTaskForm] = useState(false);\r\n\r\n    const [newFolderColor, setNewFolderColor] = useState(\"#ffb3b3\");\r\n    const [newFolderName, setNewFolderName] = useState(\"\");\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const [editIndex, setEditIndex] = useState(null);\r\n    const [taskDeadline, setTaskDeadline] = useState(\"\");\r\n    const [taskStartDate, setTaskStartDate] = useState(\"\");\r\n\r\n    const calculateProgress = (startDate, deadline) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(deadline);\r\n        const now = new Date();\r\n\r\n        if (now >= end) return 100;\r\n        if (now <= start) return 0;\r\n\r\n        const totalMs = end - start;\r\n        const elapsedMs = now - start;\r\n\r\n        return Math.min(100, Math.round((elapsedMs / totalMs) * 100));\r\n    };\r\n\r\n    const getDaysLeft = (deadline) => {\r\n        if (!deadline) return \"\";\r\n\r\n        const [year, month, day] = deadline.split(\"-\").map(Number);\r\n        const dueDate = new Date(year, month - 1, day);\r\n        const today = new Date();\r\n        const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n        const timeDiff = dueDate.getTime() - todayDate.getTime();\r\n        const dayDiff = Math.round(timeDiff / (1000 * 60 * 60 * 24));\r\n\r\n        if (dayDiff < 0) return \"Overdue\";\r\n        if (dayDiff === 0) return \"Due today\";\r\n        if (dayDiff === 1) return \"Due tomorrow\";\r\n        return `${dayDiff} days left`;\r\n    };\r\n\r\n\r\n    const addTask = () => {\r\n        if (!newTask.trim() || !selectedFolderId) return;\r\n\r\n        setFolders(folders.map(folder => {\r\n            if (folder.id === selectedFolderId) {\r\n                const updatedTasks = [...folder.tasks];\r\n\r\n                if (editIndex !== null) {\r\n                    updatedTasks[editIndex] = {\r\n                        ...updatedTasks[editIndex],\r\n                        text: newTask,\r\n                        deadline: taskDeadline,\r\n                        startDate: taskStartDate || updatedTasks[editIndex].startDate\r\n                    };\r\n                } else {\r\n                    updatedTasks.push({\r\n                        text: newTask,\r\n                        completed: false,\r\n                        startDate: taskStartDate || new Date().toISOString(),\r\n                        deadline: taskDeadline\r\n                    });\r\n                }\r\n\r\n                return { ...folder, tasks: updatedTasks };\r\n            }\r\n            return folder;\r\n        }));\r\n\r\n        setNewTask(\"\");\r\n        setEditIndex(null);\r\n        setTaskDeadline(\"\");\r\n        setTaskStartDate(\"\");\r\n        setShowTaskForm(false);\r\n    };\r\n\r\n    const toggleComplete = (folderId, index) => {\r\n        setFolders(prev =>\r\n            prev.map(folder =>\r\n                folder.id === folderId\r\n                    ? {\r\n                        ...folder,\r\n                        tasks: folder.tasks.map((task, i) =>\r\n                            i === index ? { ...task, completed: !task.completed } : task\r\n                        ),\r\n                    }\r\n                    : folder\r\n            )\r\n        );\r\n    };\r\n\r\n    const editTask = (folderId, index) => {\r\n        const folder = folders.find(f => f.id === folderId);\r\n        if (!folder) return;\r\n        setNewTask(folder.tasks[index].text);\r\n        setTaskDeadline(folder.tasks[index].deadline || \"\");\r\n        setTaskStartDate(folder.tasks[index].startDate || \"\");\r\n        setEditIndex(index);\r\n        setSelectedFolderId(folderId);\r\n        setShowTaskForm(true);\r\n    };\r\n\r\n    const deleteTask = (folderId, index) => {\r\n        setFolders(prev =>\r\n            prev.map(folder =>\r\n                folder.id === folderId\r\n                    ? {\r\n                        ...folder,\r\n                        tasks: folder.tasks.filter((_, i) => i !== index),\r\n                    }\r\n                    : folder\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"tracker-page-container\">\r\n            <Navbar />\r\n\r\n            <div className=\"dashboard\">\r\n                <div className=\"sidebar\">\r\n                    <div className=\"header\">\r\n                        To-Do List\r\n                        <button className=\"add-toggle\" onClick={() => setShowAddMenu(!showAddMenu)}>+</button>\r\n                        {showAddMenu && (\r\n                            <div className=\"add-dropdown\">\r\n                                <div onClick={() => { setShowFolderForm(true); setShowTaskForm(false); setShowAddMenu(false); }}>\r\n                                    📁 Add Folder\r\n                                </div>\r\n                                <div onClick={() => { setShowTaskForm(true); setShowFolderForm(false); setShowAddMenu(false); }}>\r\n                                    ➕ Add Task\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {showTaskForm && selectedFolderId && (\r\n                        <div className=\"todo-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add a task...\"\r\n                                value={newTask}\r\n                                onChange={(e) => setNewTask(e.target.value)}\r\n                                onKeyDown={(e) => e.key === \"Enter\" && addTask()}\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                value={taskStartDate}\r\n                                onChange={(e) => setTaskStartDate(e.target.value)}\r\n                                placeholder=\"Start date\"\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                value={taskDeadline}\r\n                                onChange={(e) => setTaskDeadline(e.target.value)}\r\n                                placeholder=\"Deadline\"\r\n                            />\r\n                            <button onClick={addTask}>Add</button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {showFolderForm && (\r\n                        <div className=\"folder-form\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Folder name\"\r\n                                value={newFolderName}\r\n                                onChange={(e) => setNewFolderName(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"color\"\r\n                                value={newFolderColor}\r\n                                onChange={(e) => setNewFolderColor(e.target.value)}\r\n                            />\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (!newFolderName.trim()) return;\r\n                                    const newFolder = {\r\n                                        id: Date.now(),\r\n                                        name: newFolderName.trim(),\r\n                                        color: newFolderColor,\r\n                                        tasks: []\r\n                                    };\r\n                                    setFolders([...folders, newFolder]);\r\n                                    setNewFolderName(\"\");\r\n                                    setNewFolderColor(\"#ffb3b3\");\r\n                                    setShowFolderForm(false);\r\n                                }}\r\n                            >\r\n                                Create\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <ul className=\"folder-list\">\r\n                        {folders.map(folder => (\r\n                            <li key={folder.id} className=\"folder-item\">\r\n                                <div\r\n                                    className=\"folder-header\"\r\n                                    onClick={() => {\r\n                                        setExpandedFolderId(prev => prev === folder.id ? null : folder.id);\r\n                                        setSelectedFolderId(folder.id);\r\n                                    }}\r\n                                    style={{\r\n                                        backgroundColor: folder.id === expandedFolderId ? \"#e3f2fd\" : \"#f5f5f5\",\r\n                                        borderLeft: `10px solid ${folder.color}`,\r\n                                    }}\r\n                                >\r\n                                    {folder.name}\r\n                                </div>\r\n\r\n                                {expandedFolderId === folder.id && (\r\n                                    <ul className=\"todo-list\">\r\n                                        {folder.tasks.map((task, index) => (\r\n                                            <li\r\n                                                key={index}\r\n                                                className={task.completed ? \"completed\" : \"\"}\r\n                                                style={{ borderLeft: `6px solid ${folder.color}` }}\r\n                                                draggable\r\n                                                onDragStart={() =>\r\n                                                    setDraggedTaskInfo({\r\n                                                        folderId: folder.id,\r\n                                                        taskIndex: index,\r\n                                                    })\r\n                                                }\r\n                                                onDrop={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    if (!draggedTaskInfo) return;\r\n\r\n                                                    setFolders(prev => {\r\n                                                        const newFolders = [...prev];\r\n                                                        const sourceFolder = newFolders.find(f => f.id === draggedTaskInfo.folderId);\r\n                                                        const targetFolder = newFolders.find(f => f.id === folder.id);\r\n\r\n                                                        if (!sourceFolder || !targetFolder) return prev;\r\n\r\n                                                        const [movedTask] = sourceFolder.tasks.splice(draggedTaskInfo.taskIndex, 1);\r\n\r\n                                                        // Get bounding box to determine where in the target the drop occurred\r\n                                                        const bounding = e.currentTarget.getBoundingClientRect();\r\n                                                        const offset = e.clientY - bounding.top;\r\n\r\n                                                        // If the drop is in the top half of the element, insert before\r\n                                                        const dropBefore = offset < bounding.height / 2;\r\n\r\n                                                        const newIndex = dropBefore ? index : index + 1;\r\n\r\n                                                        if (folder.id === draggedTaskInfo.folderId) {\r\n                                                            // Drag within same folder\r\n                                                            sourceFolder.tasks.splice(newIndex > draggedTaskInfo.taskIndex ? newIndex - 1 : newIndex, 0, movedTask);\r\n                                                        } else {\r\n                                                            // Drag to another folder\r\n                                                            targetFolder.tasks.splice(newIndex, 0, movedTask);\r\n                                                        }\r\n\r\n                                                        return newFolders;\r\n                                                    });\r\n\r\n                                                    setDraggedTaskInfo(null);\r\n                                                }}\r\n\r\n                                            >\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={task.completed}\r\n                                                    onChange={() => toggleComplete(folder.id, index)}\r\n                                                />\r\n                                                <span>{task.text}</span>\r\n                                                {task.deadline && task.startDate && (\r\n                                                    <div className=\"progress-wrapper\">\r\n                                                        <div className=\"progress-container\">\r\n                                                            <div\r\n                                                                className=\"progress-bar\"\r\n                                                                style={{ width: `${calculateProgress(task.startDate, task.deadline)}%` }}\r\n                                                            ></div>\r\n                                                        </div>\r\n                                                        <span className=\"due-date-label\">{getDaysLeft(task.deadline)}</span>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div className=\"task-buttons\">\r\n                                                    <button onClick={() => editTask(folder.id, index)}>✏️</button>\r\n                                                    <button onClick={() => deleteTask(folder.id, index)}>❌</button>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"middle-column\">\r\n                    <div className=\"image-container\"></div>\r\n                    <div className=\"achievements-bar\" onClick={toggleAchievements}>\r\n                        Achievements + Statistics\r\n                    </div>\r\n                    {showAchievements && (\r\n                        <div className=\"achievements-content\">\r\n                            <p>⭐ You completed 3 Pomodoros today!</p>\r\n                            <p>📈 Your focus time increased by 12%</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"widgets\">\r\n                    <div className=\"widget calendar-widget\">\r\n                        <div className=\"header\">Calendar</div>\r\n                    </div>\r\n                    <div className=\"widget pomodoro-widget\">\r\n                        <div className=\"header\">Pomodoro</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main\"></div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudyTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}